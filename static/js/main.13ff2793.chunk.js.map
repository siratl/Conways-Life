{"version":3,"sources":["components/Box.js","components/Grid.js","components/Buttons.js","App.js","index.js"],"names":["Box","selectBox","_this","props","isClickable","row","col","alert","react_default","a","createElement","className","this","boxClass","id","onClick","React","Component","Grid","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","width","cols","rowsArr","i","rows","j","boxId","gridFull","push","components_Box","key","style","Buttons","setActive1","gridSize","setActive2","setActive3","toggle","bind","assertThisInitialized","dropdownOpen","setState","prevState","ButtonToolbar","Button","color","size","playBtn","pauseBtn","slow","fast","clear","seed","Dropdown","isOpen","DropdownToggle","caret","DropdownMenu","DropdownItem","arrayClone","arr","JSON","parse","stringify","App","gridCopy","Math","floor","random","isPaused","clearInterval","intervalId","setInterval","play","speed","grid1","grid2","count","generation","grid","Array","fill","map","console","log","components_Grid","components_Buttons","backgroundColor","height","href","rel","target","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.13ff2793.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Box extends React.Component {\r\n  selectBox = () => {\r\n    this.props.isClickable\r\n      ? this.props.selectBox(this.props.row, this.props.col)\r\n      : alert('Selection Unavailable, Automaton Playing!');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={this.props.boxClass}\r\n        id={this.props.id}\r\n        onClick={this.selectBox}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Box;\r\n","import React from 'react';\r\nimport Box from './Box';\r\n\r\nclass Grid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const width = this.props.cols * 14;\r\n    let rowsArr = [];\r\n\r\n    let boxClass = '';\r\n    for (let i = 0; i < this.props.rows; i++) {\r\n      for (let j = 0; j < this.props.cols; j++) {\r\n        let boxId = i + '_' + j;\r\n\r\n        boxClass = this.props.gridFull[i][j] ? 'box alive' : 'box dead';\r\n        rowsArr.push(\r\n          <Box\r\n            boxClass={boxClass}\r\n            key={boxId}\r\n            boxId={boxId}\r\n            row={i}\r\n            col={j}\r\n            selectBox={this.props.selectBox}\r\n            isClickable={this.props.isClickable}\r\n          />,\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"grid\" style={{ width: width }}>\r\n        {rowsArr}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Button,\r\n  DropdownItem,\r\n  ButtonToolbar,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n} from 'reactstrap';\r\n\r\nclass Buttons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      dropdownOpen: false,\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState(prevState => ({\r\n      dropdownOpen: !prevState.dropdownOpen,\r\n    }));\r\n  }\r\n\r\n  setActive1 = () => {\r\n    this.props.gridSize(1);\r\n  };\r\n\r\n  setActive2 = () => {\r\n    this.props.gridSize(2);\r\n  };\r\n\r\n  setActive3 = () => {\r\n    this.props.gridSize(3);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"center\">\r\n        <ButtonToolbar>\r\n          <Button\r\n            color=\"secondary\"\r\n            size=\"sm\"\r\n            className=\"btn\"\r\n            onClick={this.props.playBtn}\r\n          >\r\n            Play\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            size=\"sm\"\r\n            className=\"btn\"\r\n            onClick={this.props.pauseBtn}\r\n          >\r\n            Pause\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            size=\"sm\"\r\n            className=\"btn\"\r\n            onClick={this.props.slow}\r\n          >\r\n            Slow\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            size=\"sm\"\r\n            className=\"btn\"\r\n            onClick={this.props.fast}\r\n          >\r\n            Fast\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            size=\"sm\"\r\n            className=\"btn\"\r\n            onClick={this.props.clear}\r\n          >\r\n            Clear\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            size=\"sm\"\r\n            className=\"btn\"\r\n            onClick={this.props.seed}\r\n          >\r\n            Seed\r\n          </Button>\r\n          <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n            <DropdownToggle caret>Grid Size</DropdownToggle>\r\n            <DropdownMenu>\r\n              <DropdownItem onClick={this.setActive1}>30x30</DropdownItem>\r\n              <DropdownItem onClick={this.setActive2}>40x40</DropdownItem>\r\n              <DropdownItem onClick={this.setActive3}>50x50</DropdownItem>\r\n            </DropdownMenu>\r\n          </Dropdown>\r\n        </ButtonToolbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Buttons;\r\n","import React from 'react';\nimport './App.css';\n\nimport Grid from './components/Grid.js';\nimport Buttons from './components/Buttons';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.speed = 300;\n    this.rows = 30;\n    this.cols = 50;\n\n    this.state = {\n      isClickable: true,\n      isPaused: false,\n      generation: 0,\n      gridFull: Array(this.rows)\n        .fill()\n        .map(() => Array(this.cols).fill(false)),\n    };\n  }\n\n  selectBox = (row, col) => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    gridCopy[row][col] = !gridCopy[row][col];\n    this.setState({\n      gridFull: gridCopy,\n    });\n  };\n\n  seed = () => {\n    let gridCopy = arrayClone(this.state.gridFull);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        if (Math.floor(Math.random() * 4) === 1) {\n          gridCopy[i][j] = true;\n        }\n      }\n    }\n    this.setState({\n      gridFull: gridCopy,\n    });\n  };\n\n  playBtn = () => {\n    this.setState({ isPaused: false, isClickable: false });\n    clearInterval(this.intervalId);\n    this.intervalId = setInterval(this.play, this.speed);\n  };\n\n  play = () => {\n    let grid1 = this.state.gridFull;\n    let grid2 = arrayClone(this.state.gridFull);\n\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.cols; j++) {\n        let count = 0;\n\n        if (i > 0) if (grid1[i - 1][j]) count++;\n        if (i > 0 && j > 0) if (grid1[i - 1][j - 1]) count++;\n        if (i > 0 && j < this.cols - 1) if (grid1[i - 1][j + 1]) count++;\n        if (j < this.cols - 1) if (grid1[i][j + 1]) count++;\n        if (j > 0) if (grid1[i][j - 1]) count++;\n        if (i < this.rows - 1) if (grid1[i + 1][j]) count++;\n        if (i < this.rows - 1 && j > 0) if (grid1[i + 1][j - 1]) count++;\n        if (i < this.rows - 1 && j < this.cols - 1)\n          if (grid1[i + 1][j + 1]) count++;\n        if (grid1[i][j] && (count < 2 || count > 3)) grid2[i][j] = false;\n        if (!grid1[i][j] && count === 3) grid2[i][j] = true;\n      }\n    }\n    this.setState({\n      gridFull: this.state.isPaused ? this.state.gridFull : grid2,\n      generation: this.state.isPaused\n        ? this.state.generation\n        : this.state.generation === 3000\n        ? this.state.generation\n        : this.state.generation + 1,\n    });\n  };\n\n  pauseBtn = () => {\n    clearInterval(this.intervalId);\n    this.setState({ isPaused: true, isClickable: true });\n  };\n\n  slow = () => {\n    this.speed = this.speed >= 5300 ? 5300 : this.speed + 1000;\n    this.playBtn();\n  };\n\n  fast = () => {\n    this.speed = this.speed <= 300 ? 300 : this.speed - 1000;\n    this.playBtn();\n  };\n\n  clear = () => {\n    clearInterval(this.intervalId);\n    let grid = Array(this.rows)\n      .fill()\n      .map(() => Array(this.cols).fill(false));\n    this.setState({\n      gridFull: grid,\n      generation: 0,\n      isClickable: true,\n    });\n    this.speed = 300;\n  };\n\n  gridSize = size => {\n    console.log(size);\n    switch (size) {\n      case 1:\n        this.cols = 30;\n        this.rows = 30;\n        break;\n      case 2:\n        this.cols = 40;\n        this.rows = 40;\n        break;\n      default:\n        this.cols = 50;\n        this.rows = 50;\n    }\n    this.clear();\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"App-header\">Conway's Game of Life</h1>\n\n        <h4>Generations: {this.state.generation}</h4>\n        <Grid\n          gridFull={this.state.gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n          isClickable={this.state.isClickable}\n        />\n        <Buttons\n          playBtn={this.playBtn}\n          pauseBtn={this.pauseBtn}\n          slow={this.slow}\n          fast={this.fast}\n          clear={this.clear}\n          seed={this.seed}\n          gridSize={this.gridSize}\n        />\n        <section className=\"rules\">\n          <hr\n            style={{\n              backgroundColor: 'white',\n              height: 1,\n            }}\n          />\n          <h3>Rules</h3>\n          <ol>\n            <li>\n              Any live cell with fewer than two live neighbours dies, as if by\n              underpopulation.\n            </li>\n            <li>\n              Any live cell with two or three live neighbours lives on to the\n              next generation.\n            </li>\n            <li>\n              Any live cell with more than three live neighbours dies, as if by\n              overpopulation.\n            </li>\n            <li>\n              Any dead cell with three live neighbours becomes a live cell, as\n              if by reproduction.\n            </li>\n          </ol>\n\n          <section className=\"part2\">\n            <h3>About the Algorithm</h3>\n            <p>\n              The \"Game of Life\" is a cellular automaton formulated by{' '}\n              <a\n                href=\"https://en.wikipedia.org/wiki/John_Horton_Conway\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                John Horton Conway\n              </a>{' '}\n              in 1970. He was a British mathematician that postulated several\n              theories including the number theory and coding theory. The game\n              is a zero-player game, meaning that its evolution is determined by\n              its initial state, requiring no further input.\n              <p>\n                Conway chose the rules above carefully, after considerable\n                experimentation, to meet the criteria:\n                <ol>\n                  <li>There should be no explosive growth.</li>\n                  <li>\n                    There should exist small initial patterns with chaotic,\n                    unpredictable outcomes.\n                  </li>\n                  <li>\n                    There should be potential for von Neumann universal\n                    constructors.\n                  </li>\n                  <li>\n                    The rules should be as simple as possible, whilst adhering\n                    to the above constraints.\n                  </li>\n                </ol>\n              </p>\n              For more information about the Algorithm of Conways \"Game of Life\"{' '}\n              <a\n                href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life#Examples_of_patterns\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                Wikipedia\n              </a>{' '}\n              has a great resource\n            </p>\n          </section>\n        </section>\n      </div>\n    );\n  }\n}\n\nfunction arrayClone(arr) {\n  return JSON.parse(JSON.stringify(arr));\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}